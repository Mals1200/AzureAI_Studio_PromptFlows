name: Build and deploy Python app to Azure Web App - cxqa-streamlit-webapp

on:
  push:
    branches:
      - Streamlit_consume
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
  
      - name: Install dependencies
        run: pip install -r "Streamlit app/requirements.txt"
        
      - name: Zip artifact for deployment
        run: zip -r release.zip ./* -x "venv/*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_CA62AC908A3649CF92F53A3222EF7B1B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_5F82160D38034A648B583FDBAE33628D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6A42E802A43A4706A288E1F15F763EC5 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'cxqa-streamlit-webapp'
          slot-name: 'Production'
          package: '.'
          startup-command: 'streamlit run "Streamlit app/streamlit_app.py" --server.port $PORT --server.address 0.0.0.0'
